                             PHOSPHOR ENGINE
                                by Mibi88

Phosphor Engine is small engine to create text adventures. It is made up of a
rv32i emulator (if it can be called an emulator, a conversion tool to generate
the text adventure data and the engine code.

I created it for the js13k game jam 2025 but I was unable to finish it before
the deadline.

The engine code is in the game folder.

    BUILDING

Building requires a UNIX-like environment.

First of all, you need a llvm toolchain. It can be installed like this on
Fedora:

# dnf install llvm clang


Here is a complete list of the dependencies:

 - bash
 - the GNU coreutils obviously
 - xxd
 - java (not required when passing the -d flag)
 - imagemagick (when passing the -i flag)
 - clang/llvm

If I forgot to list a dependency, please file an issue.

Then, just run the build script:

$ ./build.sh

and it should download all the necessary files and make a build of the game.

You can pass the -d flag to make a debug build and the -f flag to force
redownloading all the dependencies.

You can pass the -i flag to store the game binary in an image.

    RUNNING IT

To test it you can just run

$ python -m http.server

in the build folder. Then just go to the address shown in the terminal and you
should be able to play the text adventure!

    TODO

[x] Code the conversion tool.
[x] Code the engine.
[ ] Use a full libgcc or compiler-rt build instead of this messy libgcc source
    code downloading script, because I was unable to compile libgcc or
    compiler-rt entirely for rv32i so far.
[ ] Allow linking multiple game data files to one output file.
[ ] Clean up the datagen code.
[ ] Clean up the engine code.
[ ] Add commands to allow acquiring objects, unlocking commands with them,
    and using them, i.e. removing them.

    LICENSE

This program is licensed under the BSD-3-Clause license (see COPYING)
